# '''Марта идет в казино и приносит n монет. В казино есть три игровых автомата,
# и она играет ими по порядку, пока у нее не останется четвертаков. То есть,
# она играет в первый игровой автомат, потом во второй, потом в третий, потом снова в
# первый, затем второй и так далее. Каждая игра стоит одну четверть.
# Игровые автоматы работают по следующим правилам:
# • Первый игровой автомат платит 30 четвертаков каждый 35-й раз, когда он играет.
# • Второй игровой автомат платит 60 четвертаков за каждый сотый раз.
# • Третий игровой автомат платит 9 четвертаков каждый 10-й раз, когда он играет.
# • Никакие другие игры ничего не платят.
# Определите, сколько раз Марта будет играть, прежде чем у нее не останется четвертаков.
# '''
# ========================================================================================================
# d = {'Michael':1, 'pizza':2}
# print(d)
# d['Michael']+=1
# print(d)
# ==================================================================================================
# counter = 0
# coin = int(input("Число монет"))
# game = {'game_one': 0, 'game_two': 0, "game_three": 0}
# while True:
#     if coin == 0:
#         print(counter)
#         break
#     game['game_one'] += 1
#     counter += 1
#     coin -= 1
#     if game['game_one'] == 35:
#         coin += 30
#
#         print("you won 30 coins")
#     if coin == 0:
#         print(counter)
#         break
#     game['game_two'] += 1
#     counter += 1
#     coin -= 1
#     if game['game_two'] == 100:
#         coin += 60
#         print("you won 60 coins")
#     if coin == 0:
#         print(counter)
#         break
#     game['game_three'] += 1
#     counter += 1
#     coin -= 1
#     if game['game_three'] == 10:
#         coin += 9
#         print("you won 9 coins")
# #=================================================================================================================
# '''У нас есть пять любимых песен с именами A, B, C, D и E. Мы создали список воспроизведения
# из этих песен и используем приложение для управления списком воспроизведения. Песни
# начинаются в порядке A, B, C, D, E. В приложении есть четыре кнопки:
#
# Кнопка 1: Перемещает первую песню из списка воспроизведения в конец списка воспроизведения.
# Например, если список воспроизведения в данный момент A, B, C, D, E, то он
# изменится на B, C, D, E, A.
#
# Кнопка 2: Перемещает последнюю песню из списка воспроизведения в начало списка
# воспроизведения. Например, если список воспроизведения в данный момент A, B, C, D, E, то он
# изменится на E, A, B, C, D.
#
# Кнопка 3: Меняет местами первые две песни из списка воспроизведения. Например,
# если список воспроизведения в данный момент A, B, C, D, E, то он изменится на B, A,
# C, D, E.
# Кнопка 4: Воспроизведение списка воспроизведения!
#
# Нам предоставляется возможность нажатия кнопки пользователем. Когда пользователь нажимает кнопку 4,
# выведите порядок песен в списке воспроизведения".'''
# # muzika = ["A", "B", "C", "D", "E"]
# # muzika[0], muzika[1] = muzika[1], muzika[0]
# # print(muzika)
#
# muzika = ["A", "B", "C", "D", "E"]
# player = {"button1":0, "button2":0, "button3":0, "button4":0}
# x = input("press the button 1-4")
# if "1":
#     player["button1"]+=1
#
# if "2":
#     player["button2"]+=1
#
# if "3":
#     player["button3"]+=1
#
# if "4":
#     player["button4"]+=1
#
# if player['button1'] == 1:
#     muzika += [muzika.pop(0)]
#     print(muzika)
# if player['button2'] == 1:
#     muzika.insert(0, muzika.pop(len(muzika)-1))
#     print(muzika)
# if player['button3'] == 1:
#     print(muzika)
#     muzika[0], muzika[1] = muzika[1], muzika[0]
# if player['button4'] == 1:
#     import turtle
#
#     t = turtle.Pen()
#     turtle.speed(100)
#     turtle.bgcolor('white')
#     colors = ['magenta', 'purple', 'blue', 'green', 'orange', 'yellow', 'magenta']
#     for i in range(360):
#         t.pencolor(colors[i // 150])
#         t.width(i // 100 + 1)
#         t.forward(i)
#         t.left(50)
#
#
#
#
#
#
#
#
# #print(muzika.index("D"))
# # l = [1,2,3,4,5]
# # l += [l.pop(0)]
# # print(l)
# # muzika = ["A", "B", "C", "D", "E"]
# # muzika.insert(0, muzika.pop(len(muzika)-1))
# # print(muzika)

# ==============================================================================================================================================================
# '''1. Напишите программу на Python, чтобы найти те числа, которые делятся на 7 и кратны 5, в диапазоне от 1500 до 2700 (оба включены).'''
#
# for i in range(1500, 2701):
#     if i % 7 == 0 and i % 5 == 0:
#         print(i)
# =========================================================================================================================
# '''2. Напишите программу на Python для преобразования температур в градусы Цельсия и Фаренгейта и обратно.
# [ Формула :C = (F-32) * 5 / 9 ]|[ F = С * 9 / 5 + 32 [ где c = температура в градусах Цельсия и f = температура в градусах Фаренгейта ]
# Ожидаемый результат :
# 60°C - это 140 градусов по Фаренгейту
# 45°F - это 7 градусов по Цельсию'''
#
#
# while True:
#     x = input('Конвертируем из фаренгейта в цельсии?  y или n , где y = да, n = нет')
#     if x != "n" and x != "y":
#         print('Что за дичь ты ввёл? Повтори ввод!!')
#     if x == "y":
#         F = int(input('Сколько градусов?'))
#         Q = (F - 32) * (5 / 9)
#         print(Q)
#         break
#     if x == "n":
#         C = int(input('Сколько градусов?'))
#         W = C * (9 / 5) + 32
#         print(W)
#         break
'''3. Напишите программу на Python, чтобы угадать число от 1 до 9.
Примечание: Пользователю будет предложено ввести предположение. Если пользователь угадывает неправильно,
то приглашение появляется снова до тех пор, пока предположение не окажется правильным, при успешном угадывании
пользователь получит сообщение "Хорошо угадано!", и программа завершит работу.
'''
# import random
# Z = random.randrange(1,1000)
# while True:
#      w = int(input("Введите число от 1 до 1000"))
#      if w > Z:
#          print("Введите число меньше этого")
#      if w < Z:
#          print("Введите число больше этого")
#      if w == Z:
#          print("Хорошо угадано!")
#          break
#      elif w != Z:
#         print("Повторите попытку")
'''4. Напишите программу на Python для построения следующего шаблона, используя вложенный цикл for.'''
'''
* 
* * 
* * * 
* * * * 
* * * * * 
* * * * 
* * * 
* * 
*
'''
# rows = int(input("Enter the number of rows: "))
#
# #Outer loop will print the number of rows
# for i in range(0, rows):
#     # This inner loop will print the stars
#     for j in range(0, i + 1):
#         print("*", end=' ')
#         # Change line after each iteration
#     print(" ")
# # For second pattern
# for i in range(rows + 1, 0, -1):
#     for j in range(0, i + 0):
#         print("*", end=' ')
#     print(" ")
'''4. Напишите программу на Python для построения следующего шаблона, используя вложенный цикл for.'''
'''
*
* * 
* * * 
* * * * 
* * * * * 
* * * * 
* * * 
* * 
*
'''
# for i in range(5):
#     print(i * "* ")
# for i in range(5, 0, -1):
#     print(i * "* ")

"5. Напишите программу на Python, которая принимает слово от пользователя и переворачивает его."

# Q = input("Ваше слово")
# s = []
# for i in Q:
#     s.append(i)
# vowels_str = "".join(s)
# print(vowels_str)
# s.reverse()
# vowels_str = "".join(s)
# print(vowels_str)


"""6. Напишите программу на Python для подсчета количества четных и нечетных чисел в серии чисел.
Примеры номеров : числа = (1, 2, 3, 4, 5, 6, 7, 8, 9) 
Ожидаемый результат :
Количество четных чисел : 5
Количество нечетных чисел : 4"""

# a = [1, 2, 3, 4, 5, 6, 7, 8, 9]
# odd = 0
# even = 0
# for i in a:
#     if i % 2 == 0:
#         odd += 1
#     if i % 2 != 0:
#         even += 1
# print(f"Количество четных чисел: {odd}")
# print(f"Количество нечетных чисел: {even}")


""" 7. Напишите программу на Python, которая печатает каждый элемент и соответствующий ему тип из следующего списка.
Sample List : datalist = [1452, 11.23, 1+2j, True, 'w3resource', (0, -1), [5, 12], {"class":'V', "section":'A'}]"""
#            0      1     2     3        4           5         6                 7
# datalist = [1452, 11.23, 1+2j, True, 'w3resource', (0, -1), [5, 12], {"class":'V', "section":'A'}]
# index = 0
# # print(type(datalist))
# while True:
#     if print(datalist[index],type(datalist[index])) == print(datalist[index], type(datalist[index])):
#         index += 1
#     if index == 8:
#         break

# for i in datalist:
#     print(i,type(i))

'''8. Напишите программу на Python, которая печатает все числа от 0 до 6, кроме 3 и 6.
Примечание: Используйте оператор 'continue' .
Ожидаемый результат : 0 1 2 4 5'''
# s = []
# for i in range(6):
#     if (i == 3 or i==6):
#         continue
#     s.append(i)
# print(s)

"""9. Напишите программу на Python, чтобы получить ряд Фибоначчи в диапазоне от 0 до 50. Зайдите в редакцию
Примечание: Последовательность Фибоначчи - это последовательность чисел :
0, 1, 1, 2, 3, 5, 8, 13, 21, ....
Каждое следующее число определяется путем сложения двух чисел перед ним.
Ожидаемый результат : 1 1 2 3 5 8 13 21 34"""
# s = []
# counter = 0
# for i in range(51):
#     s.append(i)
#
# for d in range(51):

""" Напишите  программу на Python, которая перебирает целые числа от  1  до  50. Для чисел, кратных трем, вместо цифры выведите
    "Шипение", а для чисел, кратных пяти, выведите "Жужжание".Для чисел, кратных трем и пяти, выведите  Fizz  Buzz. Выборочный
    вывод:
    шипение
    1
    2
    шипучка
    4
    жужжание"""
# for i in range(1,51):
#     if i % 15 == 0:
#         print("Fizz Buzz")
#     elif i % 3 == 0:
#         print("Шипение")
#     elif i % 5 == 0:
#         print("Жужжание")
#     else:
#         print(i)
"""11. Напишите программу на Python, которая принимает две цифры m (строка) и n (столбец) в качестве входных данных и 
генерирует двумерный массив. Значение элемента в i-й строке и j-м столбце массива должно быть i*j. Зайдите в редакцию
Примечание :
i = 0,1.., m-1
j = 0,1, n-1.

Тестовые данные : Строки = 3, столбцы = 4"""

# m = int(input("число элементов в одном столбце "))
# n = int(input("число элементов в одной строке"))
# arrey = []
# for i in range(1, n + 1):
#     row = []
#     for j in range(1, m + 1):
#         row.append(i * j)
#     arrey.append(row)
# for row in arrey:
#     print(row)
#
#
# # print([1,2,3,4, 5, 6])
# # print([2,4,6,8,10,12])
# # print([3,6,9,12,15,18])
# # print([4,8,12,16,20,24])
# # print([5,10,15,20,25,30])
# # s = [[1,0,3],4,3,4,5]
# # print(s[0][0])
"""12. Напишите программу на Python, которая принимает последовательность строк (пустая строка для завершения)
 в качестве входных данных и печатает строки в качестве выходных данных (все символы в нижнем регистре)."""
# a =input('enter the data')
# print(a.lower())
'''13. Напишите программу на Python, которая принимает на вход последовательность 4-значных двоичных чисел,
 разделенных запятыми. Программа напечатает числа, кратные 5, в последовательности, разделенной запятыми. 
Примерные данные : 0100,0011,1010,1001,1100,1001
Ожидаемый результат : 1010'''
# a =input()
# a = a.split(',')
# for i in a:
#     i.split()
#     if i[0] == "0":
#         pass
#     else:
#         if int(i) % 5 == 0:
#             print(i)
#         else:
#             pass


# for i in range(11):
#     if i == 0:
#         continue
#
#     if i == 1:
#         continue
#     if i % 2 == 0:
#         print(i)
'''14. Напишите программу на Python, которая принимает строку и вычисляет количество цифр и букв. 
Пример данных : Python 3.2
Ожидаемый результат :
Буквы 6
Буквы  2'''

# import string
# letters = 0
# Numbers = 0
# q = input('Введите текст')
# Alphabet = string.ascii_uppercase
# alphabet = string.ascii_lowercase
# numbers = ["1","2","3","4","5","6",'7','8','9']
# for i in q:
#     if i in alphabet or i in Alphabet:
#         letters += 1
#     if i in numbers:
#         Numbers += 1
# print(f"Буквы : {letters}")
# print(f"Цыфры : {Numbers}")

'''15. Напишите программу на Python для проверки достоверности паролей, вводимых пользователями. Зайдите в редакцию
Утверждение :

По крайней мере, 1 буква между [a-z] и 1 буква между [A-Z].
По крайней мере, 1 число в диапазоне [0-9].
По крайней мере, 1 символ из [$#@].
Минимальная длина - 6 символов.
Максимальная длина - 16 символов.'''
# import string
# while True:
#     print("Пароль должен содержать:")
#     print('По крайней мере, 1 буква между [a-z] и 1 буква между [A-Z].')
#     print('1 число в диапазоне [0-9].')
#     print('1 символ из [$#@].')
#     print('Минимальная длина - 6 символов.')
#     print('Максимальная длина - 16 символов.')
#     Alphabet = string.ascii_uppercase
#     alphabet = string.ascii_lowercase
#     numbers = ["1","2","3","4","5"'6','7','8','9','0']
#     num_count = 0
#     simbl = 0
#     up_count = 0
#     lo_count = 0
#     simbl_q = ["$","#","@"]
#     paword = input("Введите новый пароль: ")
#     if len(paword) >= 6 and len(paword) <= 16:
#         for i in paword:
#             if i in numbers:
#                 num_count += 1
#             elif i in simbl_q:
#                 simbl += 1
#             elif i in Alphabet:
#                 up_count += 1
#             elif i in alphabet:
#                 lo_count += 1
#         if num_count > 0 and simbl > 0 and lo_count > 0 and up_count > 0:
#             print("пароль сохранён")
#             break
#         else:
#             print("Ошибка")
'''16.Напишите программу на Python для поиска чисел от 100 до 400 
(оба включены), где каждая цифра числа является четным числом.
Полученные цифры должны быть напечатаны в последовательности, разделенной запятыми. '''
# for i in range (100 , 401):
#     if i % 2 == 0:
#         print(i)
'''17. Напишите программу на Python для печати алфавитного рисунка "A". 
Ожидаемый результат:
 ***
*   *
*   *
*****
*   *
*   *
*   *
'''
# for i in range(8):
#     if i == 0:
#         print(" ", 3 * "*")
#     if i == 3:
#         print(7 * "*")
#     else:
#         print("*", '   ', "*")
'''18. Напишите программу на Python для печати алфавитного узора "D". Зайдите в редакцию
Ожидаемый результат:
****
*    *
*    *
*    *
*    *
*    * 
**** 
'''
# for i in range(8):
#     if i == 0 or i == 7:
#         print(4 * "*", " ")
#     else:
#         print("*"," "," ""*")
'''19. Напишите программу на Python для печати алфавитного рисунка "E". Зайдите в редакцию
Ожидаемый результат:'''
'''
*****                                                                  
*                                                                      
*                                                                      
*****                                                                   
*                                                                      
*                                                                      
*****
'''
# for i in range(7):
#     if i == 0 or i == 3 or i == 6:
#         print(6 * "*")
#     else:
#         print("*")
'''20. Напишите программу на Python для печати алфавитного узора "G". Зайдите в редакцию
Ожидаемый результат:'''
'''
***
*  *
*
*  ***
*  *
*  *
*** 
'''
# for i in range(7):
#     if i == 0 or i == 6:
#         print(3 * "*")
#     elif  i == 3:
#         print("*"," ",3 * "*")
#     elif i == 2:
#         print("*")
#     else:
#         print("*"," ","*")
'''21. Write a Python program to print the alphabet pattern 'L'. Go to the editor'''
# for i in range(7):
#     if i == 6:
#         print(5 * "*")
#     else:
#         print("*")
'''22. Write a Python program to print the alphabet pattern 'M'. Go to the editor'''
# for i in range(6):
#     if i == 1:
#         print(2 * "*",' ',2 * "*")
#     elif i == 2:
#         print("*"," ""*"" ","*")
#     else:
#         print('*'," "," ","*")
'''23. Write a Python program to print the alphabet pattern 'O'. Go to the editor'''
# for i in range(7):
#     if i == 0 or i == 6:
#         print(" ",3 * "*"," ")
#     else:
#         print("*",3 * " ","*")
"""24. Write a Python program to print the alphabet pattern 'P'. Go to the editor"""
# for i in range(7):
#     if i == 0 or i == 3:
#         print(5 * "*")
#     elif i == 1 or i == 2:
#         print("*",2 * " ","*")
#     else:
#         print("*")
'''25. Write a Python program to print the alphabet pattern 'R'. Go to the editor'''
# for i in range(4):
#     if i == 0 or i == 3:
#         print(5 * "*")
#     elif i == 1 or i == 2:
#          print("*",2 * " ","*")
# for i in range(3):
#     if i == 0:
#         print("*"," ","*")
#     if i == 1:
#         print("*"," "" ","*")
#     if i == 2:
#         print("*"," "" "" ","*")
'''26. Напишите программу на Python для печати следующих шаблонов. '''
'''
  ****                                                                  
 *                                                                      
 *                                                                      
  ***                                                                   
     *                                                                  
     *                                                                  
 **** 
 
sssssssssssssssss                                                       
sssssssssssssssss                                                        
sssssssssssssssss                                                    
ssss         ssss                                                                   
ssss                                                                     
ssss                                                                     
sssssssssssssssss                                                       
sssssssssssssssss                                                        
sssssssssssssssss                                                     
             ssss                                                        
             ssss                                                        
ssss         ssss                                                          
sssssssssssssssss                                                       
sssssssssssssssss                                                        
sssssssssssssssss 
'''

# for i in range(7):
#     if i == 0:
#         print(" ",4 * "*")
#     elif i == 3:
#         print(" ",3 * "*"," ")
#     elif i == 4 or i == 5:
#         print(4 * " ","*")
#     elif i == 6:
#         print(4 * "*"," ")
#     else:
#         print("*")
# for i in range(15):
#     if i in [3,11]:
#         print(4 * "s",7 * " ",4 * "s")
#     elif i in [4,5]:
#         print(4 * "s",12 * " ")
#     elif i in [9,10]:
#         print(12 * " ", 4 * "s")
#     else:
#         print(17 * "s")
'''Write a Python program to print the alphabet pattern 'T'. Go to the editor'''
# for i in range(7):
#     if i == 0:
#         print(9 * "*")
#     else:
#         print(3 * " ","*")
'''Write a Python program to print the alphabet pattern 'U'. Go to the editor'''
# for i in range(7):
#     if i == 6:
#         print(" ",3 * "*"," ")
#     else:
#         print("*",3 * " ","*")
'''Write a Python program to print the alphabet pattern 'X'. Go to the editor'''
'''
*     *                                                                  
 *   *                                                                  
  * *                                                                   
   *                                                                    
  * *                                                                   
 *   *                                                                  
*     *
'''
# def library(letter):
#     if letter == "x":
#         print("*     *")
#         print(' *   * ')
#         print("  * *  ")
#         print("   *   ")
#         print("  * *  ")
#         print(' *   * ')
#         print("*     *")
#     elif letter == "s":
#         for i in range(7):
#             if i == 0:
#                 print(" ", 4 * "*")
#             elif i == 3:
#                 print(" ", 3 * "*", " ")
#             elif i == 4 or i == 5:
#                 print(4 * " ", "*")
#             elif i == 6:
#                 print(4 * "*", " ")
#             else:
#                 print("*")
#     elif letter == "g":
#         for i in range(7):
#             if i == 0 or i == 6:
#                 print(3 * "*")
#             elif i == 3:
#                 print("*", " ", 3 * "*")
#             elif i == 2:
#                 print("*")
#             else:
#                 print("*", " ", "*")
#     elif letter == "a":
#         for i in range(8):
#             if i == 0:
#                 print(" ", 3 * "*")
#             if i == 3:
#                 print(7 * "*")
#             else:
#                 print("*", '   ', "*")
#     elif letter == "d":
#         for i in range(8):
#             if i == 0 or i == 7:
#                 print(4 * "*", " ")
#             else:
#                 print("*", " ", " ""*")
#     elif letter == "break":
#         return False
# while True:
#     library(input('напиши букву'))
'''
31. Напишите программу на Python для вычисления возраста собаки в собачьих годах. Зайдите в редакцию
Примечание: В течение первых двух лет год собаки равен 10,5 человеческим годам. После этого каждый собачий год равен 4 человеческим годам.
Ожидаемый результат:

Введите возраст собаки в человеческих годах: 15 
Возраст собаки в собачьих годах составляет 73 года
'''
# age = int(input("Введите возраст собаки"))
# dog_age = 0
# if age == 1 or age == 2:
#     dog_age += 10.5 * age
# elif age > 2:
#     dog_age += 21
#     dog_age += 4 * (age - 2)
# print(dog_age)
'''32. Напишите программу на Python, чтобы проверить, является ли алфавит гласным или согласным. Зайдите в редакцию
Ожидаемый результат:

Введите букву алфавита: k
к - это согласная.
 
'''
# import string
# alphabet = string.ascii_lowercase
# glasnye = ["e", "o", "a", "i"]
# for i in alphabet:
#     if i in glasnye:
#         print(i, "glasnye")
#     elif alphabet not in glasnye:
#         print(i, "soglasne")

'''33. Напишите программу на Python для преобразования названия месяца в количество дней. Зайдите в редакцию
Ожидаемый результат:

Список месяцев: Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август
, сентябрь, Октябрь, Ноябрь, декабрь
Введите название месяца: Февраль
Количество дней: 28/29 дней
 
'''
# a = 30
# b = 28
# c = 31
# month = {'Январь': c, 'Февраль': b, 'Март': c, 'Апрель': a, 'Май': c, 'Июнь': a, 'Июль': c, 'Август': a, 'Сентябрь': c,
#          'Октябрь': a, 'Ноябрь': c, 'Декабрь': a}
#
# print(month[input()])
'''34. Напишите программу на Python для суммирования двух целых чисел. Однако,
 если сумма находится в диапазоне от 15 до 20, она вернет 20.'''
# q,s = int(input("1 var")),int(input("2 var"))
#
# if (q + s) in range(15,21):
#     print(20)
# else:
#     print(q + s)
'''35. Напишите программу на Python, которая проверяет, представляет ли строка целое число или нет.
Ожидаемый результат:

Введите строку: Python 
Строка не является целым числом.'''

# try:
#     r = int(input("Ведите строку"))
#     print("Строка является целым числом")
# except:
#     print("Строка не является целым числом")
# ====================================================================================================
# try:
#     print(1 % 0)
# except:
#     print("Ладно")

"""36. Напишите программу на Python, чтобы проверить, является ли треугольник равносторонним, 
равнобедренным или скалярным.
Примечание :
Равносторонний треугольник - это треугольник, в котором все три стороны равны.
Скалярный треугольник - это треугольник, имеющий три неравные стороны.
Равнобедренный треугольник - это треугольник с (по крайней мере) двумя равными сторонами.
Ожидаемый результат:

Введите длины сторон треугольника: 
x: 6 
y: 8 
z: 12
Скалярный треугольник
"""
# x = int(input("x"))
# y = int(input("y"))
# z = int(input("z"))
# if y == z and y == x and x == z:
#     print("Равносторонний треугольник")
# elif y != z and y != x and x != z:
#     print("Скалярный треугольник")
# elif y == z or y == x or x == z:
#     print("Равнобедренный треугольник")
'''
37. Напишите программу на Python, которая считывает два целых числа, представляющих месяц и день, и выводит сезон для этого месяца и дня.
Ожидаемый результат:

Введите месяц (например, январь, февраль и т.д.): июль 
Введите день: 31 
Время года - осень
'''
# a = {'Зима': ["Декабрь", "Январь", "Февраль"], "Лето": ['Июнь', 'Июль', 'Август'], "Осень": ['Сентябрь', 'Октябрь', 'Ноябрь'], "Весна": ['Март', 'Апрель', 'Май']}
# b,c = input("месяц"), int(input("день"))
# if b > "12":
#     print("Ты календарь видел,бездарь")
# if (b != "2") and c > 31:
#     print('Посмотри в календарь ,бездарь')
# if (b == "2") and c > 29:
#     print('Посмотри в календарь ,бездарь')
# if b == "12" or b == "1" or b == "2":
#     print('Зима')
# if b == "3" or b == "4" or b == "5":
#     print("Весна")
# if b == "6" or b == "7" or b == "8":
#     print("Лето")
# if b == "9" or b == "10" or b == "11":
#     print("Осень")
# ==========================================================================================================================
# a = input('month')
# dict = {'s': ['a', 'b', 'c'], 'g': ['w', 'q', 'r']}
# for i in dict:
#     if a in dict[i]:
#         print(i)
#         break
#     else:
#         print('fuck')
# =========================================================================================================================
# a = {'Зима': ["12", "1", "2"], "Лето": ['6', '7', '8'], "Осень": ['9', '10', '11'], "Весна": ['3', '4', '5']}
# b, c = int(input("месяц")), int(input("день"))
# while True:
#     if b > 12:
#         print("Ты календарь видел,бездарь")
#         break
#     if (b != 2) and c > 31:
#         print('Посмотри в календарь ,бездарь')
#         break
#     if (b == 2) and c > 29:
#         print('Посмотри в календарь ,бездарь')
#         break
#     for i in a:
#         if b in a[i]:
#             print(i)
#             break
# a = {'Зима': [12, 1, 2],
#      "Лето": [6, 7, 8],
#      "Осень": [9, 10, 11],
#      "Весна": [3, 4, 5]}
# while True:
#     b = int(input("месяц"))
#     c = int(input("день"))
#     if b > 12:
#         print("Ты календарь видел,бездарь")
#         break
#     if (b != 2) and c > 31:
#         print('Посмотри в календарь ,бездарь')
#         break
#     if (b == 2) and c > 28:
#         print('Посмотри в календарь ,бездарь')
#         break
#     for i in a:
#         if b in a[i]:
#             print(i)
#             break
'''
38. Напишите программу на Python для отображения астрологического знака для заданной даты рождения. Перейдите в редактор
Ожидаемый результат:

Введите день рождения: 15
Введите месяц рождения (например, март, июль и т.д.): май
Ваш астрологический знак : Телец
'''
'''
Овен - 21 марта – 20 апреля
Телец - 21 апреля – 20 мая
Близнецы - 21 мая – 21 июня
Рак - 22 июня – 22 июля
Лев - 23 июля – 22 августа
Дева - 23 августа – 23 сентября
Весы - 24 сентября – 23 октября
Скорпион - 24 октября – 22 ноября
Стрелец - 23 ноября – 21 декабря
Козерог - 22 декабря – 20 января
Водолей - 21 января – 18 февраля
Рыбы - 19 февраля – 20 марта
'''
# b_day,b_month = int(input("день")),input("месяц")
# if b_day > 31:
#     print("Error")
# elif b_day in range(21,32) and b_month == "март" or b_day in range(1,21) and b_month == "апрель":
#     print("Вы Овен")
# elif b_day in range(21,32) and b_month == "апрель" or b_day in range(1,20) and b_month == "май":
#     print("Вы Телец")
# elif b_day in range(21,32) and b_month == "май" or b_day in range(1,21) and b_month == "июнь":
#     print("Вы Близнецы")
# elif b_day in range(21,32) and b_month == "июнь" or b_day in range(1, 23) and b_month == "июль":
#     print("Вы Рак")
# elif b_day in range(23, 32) and b_month == "июль" or b_day in range(1, 22) and b_month == "август":
#     print("Вы Лев")
# elif b_day in range(23, 32) and b_month == "август" or b_day in range(1, 23) and b_month == "сентябрь":
#     print("Вы Дева")
# elif b_day in range(24, 32) and b_month == "сентябрь" or b_day in range(1, 23) and b_month == "октябрь":
#     print("Вы Весы")
# elif b_day in range(23, 32) and b_month == "октябрь" or b_day in range(1, 22) and b_month == "ноябрь":
#     print("Вы Скорпион")
# elif b_day in range(23, 32) and b_month == "ноябрь" or b_day in range(1, 21) and b_month == "декабрь":
#     print("Вы Стрелец")
# elif b_day in range(22, 32) and b_month == "декабрь" or b_day in range(1, 20) and b_month == "январь":
#     print("Вы Козерог")
# elif b_day in range(21, 32) and b_month == "январь" or b_day in range(1, 18) and b_month == "февраль":
#     print("Вы Водолей")
# elif b_day in range(19, 32) and b_month == "февраль" or b_day in range(1, 20) and b_month == "март":
#     print("Вы Рыбы")
'''
1963 - 2023
39. Напишите программу на Python для отображения знака китайского зодиака для данного года, в котором вы родились.
Ожидаемый результат:

Введите ваш год рождения: 1973 
Ваш знак зодиака : Бык
'''

# year = {2023:"Кролик",
#         2022:"Тигр",
#         2021:"Бык",
#         2020:"Крыса",
#         2019:"Свинья",
#         2018:"Собака",
#         2017:"Петух",
#         2016:"Обезьяна",
#         2015:"Коза",
#         2014:"Лошадь",
#         2013:"Змея",
#         2012:"Дракон"
#         }
# a = int(input("Введите ваш год рождения:"))
# b = (list(range(a, 2024, 12)))
# # print(b)
# length = len(b)
# length -= 1
# r = b[length]
# v = year.keys()
# if r in v:
#     print(f"Ваш знак зодиака: {year[r]}")


# a = int(input())
# b = (list(range(10)))
# print(len(b))
# if i == 2021:
#     print(year[2021])
# for i in range(a,2024,12):
#     print(i)
# year = {"Кролик":2023,
#         "Тигр":2022,
#         "Бык":2021,
#         "Крыса":2020,
#         "Свинья":2019,
#         "Собака":2018,
#         "Петух":2017,
#         "Обезьяна":2016,
#         "Коза":2015,
#         "Лошадь":2014,
#         "Змея":2013,
#         "Дракон":2012
#         }


# for i in year:
#     print(year[i])


# a = 1963
# while a < 2024:
#     print(a)
#     a += 12
#
'''
40. Напишите программу на Python, чтобы найти медиану трех значений.
Ожидаемый результат:

Введите первое число: 15
Введите второе число: 26
Введите третье число: 29
Медиана равна 26,0
'''
# a = int(input("Введите первое число:"))
# b = int(input("Введите второе число:"))
# c = int(input("Введите третье число:"))
# if a < b and a > c:
#     print(a)
# if b < c and b > a:
#     print(b)
# if c < b and c > a:
#     print(c)
'''
41. Напишите программу на Python, чтобы получить следующий день заданной даты.
Ожидаемый результат:

Введите год: 2016
Введите месяц [1-12]: 08
Введите день [1-31]: 23
Следующая дата - [гггг-мм-дд] 2016-8-24
'''
# while True:
#     y = int(input("Введите год:[1970-текущий]"))
#     if y <= 1969:
#         print()
#     m = int(input("Введите месяц [1-12]:"))
#     if m >= 12:
#         print()
#     d = int(input("Введите день [1-31]:"))
#     if d >= 31:
#         print()
#     d += 1
#     print(f'Следующая дата - [гггг-мм-дд]: {y}-{m}-{d}')
# a,b = int(input()),int(input())
# if a > 5:
#     print("n")
# elif a == 5:
#     print(5)
# elif a < 5:
#     print("less")
# if a == 5:
#     print(a)
# if b == 3:
#     print(b)
'''
42. Напишите программу на Python для вычисления суммы и среднего значения n целых чисел (ввод от пользователя).
 Введите 0 для завершения.
 '''

# r = []
# while True:
# n = int(input())
# if n == 0:
#     break
# r.append(n)
# p = 0

# n = int(input("Введите количество элементов списка: "))
# a = []
# for i in range(0, n):
#     elem = int(input("Введите элемент списка: "))
#     a.append(elem)
#     if elem == 0:
#         break
# avg = sum(a) / n
# print("Среднее значение элементов списка",round(avg, 2))
# print("Сумма чисел:",sum(a))
"""
43. Напишите программу на Python для создания таблицы умножения (от 1 до 10) числа.
Ожидаемый результат:

Введите число: 6 
a x 1 = b  
a x 2 = b  
a x 3 = b 
a х 4 = b 
a х 5 = b 
a х 6 = b 
a х 7 = b 
a х 8 = b 
a х 9 = b 
a х 10 = b
"""
# a = int(input("Введите число:"))
# c = 1
# while c < 11:
#     print(a, "x", c, "=", a * c)
#     c += 1
'''
44. Напишите программу на Python для построения следующего шаблона, используя номер вложенного цикла.
Ожидаемый результат:

1
22
333
4444
55555
666666
7777777
88888888
999999999
'''
# c = 0
# for _ in range(1,10):
#     while c < 9:
#         c += 1
#         print(str(c) * c)
'''В баскетболе очки набираются за три игры: трехочковый бросок, двухочковый бросок
и одноочковый штрафной бросок.
Вы только что посмотрели баскетбольный матч между "Яблоками" и "Бананами
" и записали количество успешных трехочковых, двухочковых и одноочковых
бросков для каждой команды. Укажите, выиграла ли игра команда
Яблоки, игру выиграли Бананы, или игра закончилась вничью.'''

'''Ввод
Есть шесть строк ввода. В первых трех указано количество очков за яблоки,
а в последних трех - за бананы.
• В первой строке указано количество успешных трехочковых бросков по
яблокам.
• Во второй строке указано количество успешных двухочковых бросков по
яблокам.
• В третьей строке указано количество успешных одноочковых штрафных бросков
по яблокам.
• В четвертой строке указано количество успешных трехочковых бросков по
бананам.
• В пятой строке указано количество успешных двухочковых бросков
"Бананов".
• В шестой строке указано количество успешных одноочковых штрафных бросков
"Бананов".
Каждое число представляет собой целое число от 0 до 100.
Выход
Выводится один символ.
• Если яблоки набрали больше очков, чем бананы, выведите A (A для Яблок).
• Если бананы набрали больше очков, чем яблоки, выведите B (B для бананов).
• Если яблоки и бананы набрали одинаковое количество очков, выведите
Т (Т для галстука)'''
# a = []
# for f in range(6):
#     elem = int(input('Ладно:'))
#     a.append(elem)
# aples = a[0] * 3 + a[1] * 2 + a[2]
# bananas = a[3] * 3 + a[4] * 2 + a[5]
# if aples < bananas:
#     print('B для бананов')
# if aples > bananas:
#     print('A для Яблок')
# if aples == bananas:
#     print('Т для галстука')

"""
в этой задаче мы будем предполагать, что телефонные номера состоят из четырех цифр. Телефонный
номер принадлежит компании телемаркетинга, если его четыре цифры удовлетворяют всем трем из следующих
свойств:
• Первая цифра равна 8 или 9.
• Четвертая цифра равна 8 или 9.
• Вторая и третья цифры совпадают.
Например, телефонный номер, четыре цифры которого равны 8119, принадлежит
оператору телемаркетинга.
Определите, принадлежит ли телефонный номер оператору телемаркетинга, и укажите
, следует ли нам ответить на звонок или проигнорировать его.
Ввод
Существует четыре строки ввода. В этих строках указаны первая, вторая, третья и
четвертая цифры телефонного номера соответственно. Каждая цифра представляет собой целое число в диапазоне от
0 до 9.
Выход
Если телефонный номер принадлежит продавцу телемаркетинга, выведите ignore; в противном случае
выведите answer.
"""
# a = []
# for i in range(4):
#     b = input('Число:')
#     if b.isnumeric():
#         a.append(int(b))
#     else:
#         print("Переменная не является числом")
#         exit()
# if a[0] > 10 or a[1] > 10 or a[2] > 10 or a[3] > 10:
#     print("Вы ввели не существующий номер ,повторите попытку")
# elif a[0] == 9 or a[3] == 9 or a[0] == 8 or a[3] == 8 and a[1] == a[2]:
#     print('ignore')
# else:
#     print('answer')

# ==========================================================================================================================
# var = "123"
# if var.isnumeric():
#     print("Переменная является числом")
# else:
#     print("Переменная не является числом")
'''
У Борко есть ряд из трех непрозрачных чашек: одна слева (местоположение 1), одна
посередине (местоположение 2) и одна справа (местоположение 3). Слева под чашкой находится шарик
. Наша работа - следить за расположением мяча, поскольку
Борко меняет местами стаканчики.
Борко может производить три вида обмена:
A Поменять местами левый и средний стаканчики
B поменять местами средний и правый стаканчики
C поменять местами левый и правый стаканчики
Например, если первая замена Борко относится к типу А, то он меняет местами левую и
среднюю чашки; поскольку мяч начинается слева, эта замена перемещает его в середину.
Если вместо этого его первая замена будет типа B, то он поменяет местами среднюю и правую
чашки; левая чашка остается там, где она есть, так что мяч не меняет своего местоположения.
Ввод
Вводимые данные представляют собой одну строку длиной не более 50 символов. Каждый символ указывает
тип обмена, который выполняет Borko: A, B или C.
Выход
Выведите конечное местоположение мяча:
• 1, если мяч находится слева
• 2, если мяч находится посередине
• 3, если мяч находится справа
'''
# ball = 1 #текущее местоположение шарика
# a = input().upper()
# while len(a) > 50:
#     print("error")
#     break
# for i in a:
#     if i == "A" and ball == 1:
#         ball = 2
#         continue
#     if i == "A" and ball == 2:
#         ball = 1
#         continue
#     if i == "B" and ball == 3:
#         ball = 2
#         continue
#     if i == "B" and ball == 2:
#         ball = 3
#         continue
#     if i == "C" and ball == 3:
#         ball = 1
#         continue
#     if i == "C" and ball == 1:
#         ball = 3
#         continue
# print(ball)
'''
Вы контролируете парковку с n парковочными местами. Вчера вы записали
, было ли занято каждое парковочное место автомобилем или пустовало. Сегодня вы
снова записали, было ли занято каждое парковочное место автомобилем или
пустовало. Укажите количество парковочных мест, которые были заняты в оба
дня.
Ввод
Входные данные состоят из трех строк.
• Первая строка содержит целое число n, количество парковочных мест. n находится
в диапазоне от 1 до 100.
• Вторая строка содержит строку из n символов для вчерашней информации,
по одному символу для каждого парковочного места. A C указывает на
занятое парковочное место (C для автомобиля), а a . указывает на пустое парковочное
место. Например, CC. означает, что первые два парковочных места
были заняты, а третье пустовало.
• Третья строка содержит строку из n символов для сегодняшней информации
в том же формате, что и вторая строка.
Выход
Выведите количество парковочных мест, которые были заняты в оба дня.
'''
# d = 0
# a = int(input())
# b = input().upper()
# c = input().upper()
# q = list(b.strip())
# i = list(c.strip())
# for l in range(a):
#     if q[l] == i[l] and q[l] == "C":
#         d += 1
# print(d)
# for i in "Ладно":
#     print(i)
# for i in range(len("Ладно")):
#     print(i)
'''
Лука пишет секретное предложение на уроке. Он не хочет, чтобы учитель
мог его прочитать, поэтому вместо того, чтобы записывать исходное предложение, он
записывает закодированную версию. После каждой гласной в предложении (a, e, i, o или u) он добавляет букву p и снова 
эту гласную. Например, вместо
того, чтобы записать предложение "i like you", он написал бы "ipi lipikepe yopoupu".
Учитель получает закодированное предложение Луки. Восстановите исходное
предложение Луки для учителя.
Ввод
Вводится одна строка текста, закодированное предложение Луки. Оно состоит из строчных
букв и пробелов. Между каждой парой слов ровно один пробел
. Максимальная длина строки составляет 100 символов.
Выход
Выведите исходное предложение Луки.
'''
# text = input()
# a = ['a', 'e', "i", "o", "u"]
# for i in text:
#     if i in a:
# result = ""
# x = "shop"
# for i in x:
#     if i == "s":
#         result += "s"
#         result += "a"
#     else:
#         result += i
# print(result)
'''
Есть n деревень, расположенных в разных точках прямой дороги. Каждая деревня
представлена целым числом, указывающим ее положение на дороге.
Соседом деревни слева является деревня со следующей наименьшей позицией;
соседом деревни справа является деревня со следующей наибольшей позицией. 
Окрестности деревни состоят из половины расстояния между этой деревней и ее
левым соседом плюс половина расстояния между этой деревней и ее правым соседом.
Например, если деревня находится на позиции 10, а ее левый сосед на позиции
6 и ее правый сосед на позиции 15, тогда окрестности этой деревни
начинаются с позиции 8 (на полпути между 6 и 10) и заканчиваются на позиции 12.5
(на полпути между 10 и 15).
Крайняя левая и крайняя правая деревни имеют только по одному соседу, поэтому определение
соседства для них не имеет смысла. В этой задаче мы проигнорируем
окрестности этих двух деревень.
Размер соседства рассчитывается как крайняя правая
точка соседства
позиция минус крайняя левая позиция соседства. Например,
соседство, которое находится в диапазоне от 8 до 12,5, имеет размер 12,5 – 8 = 4,5.
Определите размер наименьшего соседства.
Ввод
Входные данные состоят из следующих строк:
• Строка, содержащая целое число n, количество деревень. n находится в диапазоне от 3
до 100.
• n строк, каждая из которых указывает местоположение деревни. Каждая позиция
представляет собой целое число в диапазоне от -1 000 000 000 до 1 000 000 000. Позиции
необязательно располагать по порядку слева направо; сосед
деревни может находиться в любом месте этих линий.

Выход
Выведите размер наименьшей окрестности. Укажите ровно одну цифру после
запятой.
'''
# q = 0
# nabers = []
# n_village = []
# cord_villages = []
# villages = int(input())
# for i in range(0,villages):
#     a = float(input())
#     cord_villages.append(a)
# cord_villages = sorted(cord_villages)
# for i in range(1,villages - 1):
#     c1 = cord_villages[i] - cord_villages[i - 1] / 2 #1.5
#     c2 = cord_villages[i + 1] - cord_villages[i - 1] / 2 #2.5
#     c3 = c2 - c1
#     nabers.append(c3)
#     # c1 = c1 - 2
#     # c2 = c2 - 2
#     #q = (cord_villages[i] - cord_villages[i - 1]) / 2
#     # q_ = cord_villages[i - 1] + q
#     # n_village.append(q_)
#     #n_village = sorted(n_village)fgfgfgggggggggggggggвывывывывыыыыыыы
# print(min(nabers))
# print(nabers)

'''У Перо есть тарифный план передачи данных от его оператора сотовой связи, который предлагает ему x мегабайт
данных в месяц. Кроме того, любые данные, которые он не использует в данном месяце
, переносятся на следующий месяц. Например, если x равно 10, а Перо использует только
4 МБ в данный месяц, оставшиеся 6 МБ переносятся на следующий месяц (в
котором у него теперь будет доступно 10 + 6 = 16 МБ).
Нам задано количество мегабайт данных, которые Pero использует в течение каждого из
первых n месяцев. Наша задача - определить количество мегабайт, доступных
на следующий месяц.
Ввод
Входные данные состоят из следующих строк:
• Строка, содержащая целое число x, количество мегабайт, предоставляемых Pero
в месяц. x находится в диапазоне от 1 до 100.
• Строка, содержащая целое число n, количество месяцев, в течение которых у Pero
был тарифный план передачи данных. n находится в диапазоне от 1 до 100.
• n строк, по одной на каждый месяц, дающих целое число мегабайт
, которые Pero использует в этом месяце. Каждое число равно как минимум 0 и
никогда не превысит количество доступных мегабайт. (Например,
если x равно 10, а у Pero в данный момент доступно 30 МБ, следующее число
будет не более 30.)
Выход
Выведите количество мегабайт, доступных на следующий месяц.
'''
# mg_for_next_month_0 = 0
# dm = []
# mg_for_next_month_1 = []
# tarif = int(input('количество мегабайт в месяц'))
# month = int(input('количество месяцев'))
# for i in range(month):
#     mg_used = int(input('количество мегабайт в месяц потрачено'))
#     dm.append(mg_used)
#     mg_for_next_month = tarif - dm[i]
#     mg_for_next_month_1.append(mg_for_next_month )
# mg_for_next_month = sum(mg_for_next_month_1)
# print('мегабайт в следущем месяце:',mg_for_next_month + tarif)


'''Ученики хотели бы отправиться в школьную поездку в конце учебного года, но им
нужны деньги, чтобы оплатить ее. Чтобы собрать деньги, они организовали поздний завтрак. Чтобы
посетить бранч, студент первого курса платит 12 долларов, студент
второго курса - 10 долларов, студент третьего курса - 7 долларов, а студент
четвертого курса - 5 долларов.
Из всех денег, собранных на бранче, 50% могут быть использованы для
оплаты школьной поездки (остальные 50% пойдут на оплату самого бранча
).
Нам сообщают, что стоимость школьной поездки, доля учащихся в
каждый год и общее количество учащихся. Определите
, нужно ли учащимся собирать больше денег на школьную поездку.
Ввод
Входные данные состоят из 10 тестовых примеров, по три строки в каждом тестовом примере (всего 30 строк
). Вот три строки для каждого тестового примера:
• В первой строке указана стоимость школьной поездки в долларах; это целое
число от 50 до 50 000.
• Во второй строке приведены четыре цифры, указывающие на
долю студентов первого, второго, третьего и четвертого курсов, которые посещают поздний завтрак,
соответственно. Между каждой парой цифр есть пробел. Каждый
число находится в диапазоне от 0 до 1, а их сумма равна 1 (для 100 процентов).
• В третьей строке указано целое число n, количество студентов, посещающих
бранч. число n находится в диапазоне от 4 до 2000.
Выход
Для каждого тестового примера: если учащимся нужно собрать больше денег на школьную
поездку, выведите "ДА"; в противном случае выведите "НЕТ".'''

# cost = int(input("Стоимость поездки"))
# fraction = input("Доля студентов первого, второго, третьего и четвертого курсов, которые посещают поздний завтрак")
# while True:
#  try:
#     student = int(input("Количество студентов(от 4 до 2000)"))
#     if student < 4 or student > 2000:
#      print("ТЫ условие читал БЕЗДАРЬ!?")
#     else:
#         break
#  except:
#      print("ТЫ условие читал ,введи целое число БАРАН!?")
# fraction_list = fraction.split()
# # for i in fraction_list:
# #     i = float(fraction_list[fraction_list.index(i)])
# # print(fraction_list)
# fraction_list_float = []
# for i in range(len(fraction_list)):
#    fraction_list_float.append(float(fraction_list[i]))
# first_kurs = fraction_list_float[0] * student * 6
# second_kurs = fraction_list_float[1] * student * 5
# third_kurs = fraction_list_float[2] * student * 3.5
# fourth_kurs = fraction_list_float[3] * student * 2.5
# # print(first_kurs,
# #       second_kurs,
# #       third_kurs,
# #       fourth_kurs)
# total = first_kurs + second_kurs + third_kurs + fourth_kurs
# if total < cost:
#     print("Нет")
# else:
#     print("Да")
#


"""
Бонусы для пекарей
У Baker Brie есть несколько франчайзи, каждое из которых продает хлебобулочные изделия
потребителям. Достигнув 13-летнего рубежа в бизнесе,
Baker Brie будет отмечать это присуждением бонусов в зависимости от объема продаж. Размер бонусов
зависит от объема продаж за день и объема продаж на одного франчайзи. Вот как начисляются бонусы
работа:
• За каждый день, когда общий объем продаж всех франчайзи будет кратен
13, это число будет начисляться в качестве бонусов. Например, за
день, в течение которого франчайзи продали в общей сложности 26 хлебобулочных изделий, к общей сумме добавится
26/13 = 2 бонуса.
• За каждого франчайзи, чей общий объем продаж за все дни будет кратен
13, это число будет начислено в качестве бонусов. Например, франчайзи
, продавший в общей сложности 39 хлебобулочных изделий, добавит к общей сумме 39/13 = 3 бонуса
.
Определите общее количество начисленных бонусов.

Ввод
Входные данные состоят из 10 тестовых примеров. Каждый тестовый пример содержит следующие
строки:
• Строка, содержащая целое число получателей франшизы f и целое
число дней d, разделенных пробелом. f находится в диапазоне от 4 до 130, а
d - от 2 до 4745.
• d строк, по одной в день, содержащих f целых чисел, разделенных пробелами. Каждый
целое число указывает количество продаж. В первой из этих строк указаны
продажи по каждой франшизе в первый день, во второй - продажи
по каждой франшизе во второй день и так далее. Каждое целое число находится в диапазоне от
1 до 13 000.

Выход
Для каждого тестового примера выведите общее количество начисленных бонусов"""
sales = [] #количество проданных булок за все дни во всех франшизах
sales_d = [] # список продаж в обределённый день по каждой франшизе
bulki = 0
fd = []
q = ["Количество франшиз", "количество дней"]
for i in q:
    print("Введите")
    f = int(input(i))
    fd.append(f)
for i in range(fd[1]):
    print("День ", i + 1)
    for x in range(fd[0]):
        print("франжизы", x + 1)
        bulki = int(input("сколько булок продала франшиза?"))
        sales.append(bulki)
print(sales)
'''
[6 4]
[
[1 13 2 1 1 8]
[2 12 10 5 11 4]
[39 6 13 52 3 3]
[15 8 6 2 7 14]
]
'''
